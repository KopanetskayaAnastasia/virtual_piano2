# Generated by Django 5.0.4 on 2024-05-13 13:13

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Compositions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Название произведения')),
                ('author', models.CharField(max_length=100, verbose_name='Автор произведения')),
            ],
            options={
                'verbose_name': 'Произведение',
                'verbose_name_plural': 'Произведения',
            },
        ),
        migrations.CreateModel(
            name='Instruments',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Название инструмента')),
            ],
        ),
        migrations.CreateModel(
            name='Students',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Фио')),
                ('email', models.EmailField(max_length=100, verbose_name='Почтовый адрес')),
                ('grade_of_school', models.IntegerField(verbose_name='Год обучения')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата регистрации')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('instrument', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='users.instruments')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Ученик',
                'verbose_name_plural': 'Ученики',
            },
        ),
        migrations.CreateModel(
            name='StudentComposition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comp', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='users.compositions')),
                ('student', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='users.students')),
            ],
            options={
                'verbose_name': 'Связь произведение-ученик',
                'verbose_name_plural': 'Связи произведения-ученики',
            },
        ),
        migrations.CreateModel(
            name='Teachers',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Фио')),
                ('email', models.EmailField(max_length=100, verbose_name='Почтовый адрес')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата регистрации')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('instrument', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='users.instruments')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Учитель',
                'verbose_name_plural': 'Учителя',
            },
        ),
        migrations.CreateModel(
            name='TeacherStudent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('student', models.ManyToManyField(to='users.students')),
                ('teacher', models.ManyToManyField(to='users.teachers')),
            ],
            options={
                'verbose_name': 'Связь учитель-ученик',
                'verbose_name_plural': 'Связи учителя-ученики',
            },
        ),
    ]
